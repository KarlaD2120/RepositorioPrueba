
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author david
 * 
 */

public class Inicio_Sesion_Player2 extends javax.swing.JPanel {

    private String Nickname2;
    private String Sexo;

    /**
     * Creates new form Inicio_Sesion_Player2
     */
    public Inicio_Sesion_Player2() {
        initComponents();
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(rbtFemenino);
        buttonGroup.add(rbtMasculino);
        // Iniciar el programa con ambos JRadioButton deseleccionados
        buttonGroup.clearSelection();
        listenerParaRadioButtom();
    }
    public void setNickname2(String Nickname1) {
        this.Nickname2 = Nickname1;
    }

    public String getNickname2() {
        return Nickname2;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSesion2 = new javax.swing.JPanel();
        txtNombre = new javax.swing.JTextField();
        txtInstagram = new javax.swing.JTextField();
        txtNickname = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        txtNombre1 = new javax.swing.JTextField();
        btnIniciarSesion = new javax.swing.JButton();
        rbtFemenino = new javax.swing.JRadioButton();
        rbtMasculino = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        panelSesion2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNombre.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        panelSesion2.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, 220, 30));

        txtInstagram.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        panelSesion2.add(txtInstagram, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 430, 220, 30));

        txtNickname.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        txtNickname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNicknameActionPerformed(evt);
            }
        });
        panelSesion2.add(txtNickname, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, 130, 30));

        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Registrar.gif"))); // NOI18N
        btnRegistrar.setPreferredSize(new java.awt.Dimension(200, 90));
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        panelSesion2.add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 520, -1, -1));

        txtNombre1.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        txtNombre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombre1ActionPerformed(evt);
            }
        });
        panelSesion2.add(txtNombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 460, 190, 30));

        btnIniciarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/IniciasSesion.gif"))); // NOI18N
        btnIniciarSesion.setPreferredSize(new java.awt.Dimension(200, 90));
        btnIniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarSesionActionPerformed(evt);
            }
        });
        panelSesion2.add(btnIniciarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 500, -1, -1));

        rbtFemenino.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        rbtFemenino.setForeground(new java.awt.Color(255, 255, 255));
        rbtFemenino.setText("Femenino");
        rbtFemenino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFemeninoActionPerformed(evt);
            }
        });
        panelSesion2.add(rbtFemenino, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 380, -1, -1));

        rbtMasculino.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        rbtMasculino.setForeground(new java.awt.Color(255, 255, 255));
        rbtMasculino.setText("Masculino");
        rbtMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtMasculinoActionPerformed(evt);
            }
        });
        panelSesion2.add(rbtMasculino, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 380, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Sesion2.png"))); // NOI18N
        panelSesion2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelSesion2, javax.swing.GroupLayout.DEFAULT_SIZE, 1154, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelSesion2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
     private void listenerParaRadioButtom(){
            rbtFemenino.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Sexo = "F";
                System.out.println(Sexo);
            }
        });

        rbtMasculino.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Sexo = "M";
                System.out.println(Sexo);
            }
        });
}
    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtNicknameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNicknameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNicknameActionPerformed

    private void txtNombre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombre1ActionPerformed

    private void btnIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarSesionActionPerformed
        Nickname2=txtNombre1.getText();
        BancoDeVariables.setjugador2(Nickname2);
        conexionVerificacionNickname();
        System.out.println(Nickname2);   
    }//GEN-LAST:event_btnIniciarSesionActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        listenerParaRadioButtom();
        //Validacion para verificar que se ingresen letras y no numeros
        String nicknameIngresado = txtNickname.getText();
        String nombreIngresado = txtNombre.getText();

        if (nombreIngresado.matches("[a-zA-Z\\s]+")) { // Si es una cadena

            if (nicknameIngresado.matches("[a-zA-Z0-9\\s]+")) { // Permitir letras y números
                // Establecer conexión con la base de datos para verificar nickname
                String url = "jdbc:sqlserver://localhost:1433;databaseName=Base_Proyecto_Poo4;TrustServerCertificate=True;";
                String username = "sa";
                String password = "12345678";
                String nombre = txtNombre.getText();
                //Sexo se elige arriba
                String Instagram = txtInstagram.getText();
                String NicknameRegistro = txtNickname.getText();;
                try (Connection connection = DriverManager.getConnection(url, username, password)) {
                    // Crear consulta SQL
                    String sql = "SELECT COUNT(*) FROM Jugador WHERE nickname = ?";

                    // Preparar la declaración
                    try (PreparedStatement statement = connection.prepareStatement(sql)) {
                        // Establecer el valor del parámetro
                        statement.setString(1, NicknameRegistro);

                        // Ejecutar la consulta de verificacion
                        try (ResultSet resultSet = statement.executeQuery()) {
                            if (resultSet.next()) {
                                int count = resultSet.getInt(1);

                                if (count > 0) {
                                    // Ya existe un usuario con el mismo Nickname
                                    JOptionPane.showMessageDialog(null, "Ya existe un usuario con el mismo Nickname. Por favor, crea uno diferente o inicia sesión.");
                                } else {
                                    //Conecta a la base de datos y registra 
                                    conexionRegistro();
                                    //Continua con el menu
                                    EleccionFichero2 b4 = new EleccionFichero2();
                                    showPanel(b4.getFondo4());
                                }
                            }
                        }
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "ERROR: el nickname ingresado es inválido. Intente nuevamente");
            }
        } else {
            JOptionPane.showMessageDialog(this, "ERROR: el nombre ingresado es inválido. Intente nuevamente");
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void rbtFemeninoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFemeninoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtFemeninoActionPerformed

    private void rbtMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtMasculinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtMasculinoActionPerformed
    private void conexionRegistro(){
                //Conexion a la base de datos para registrar
        Connection conexion = null;
        PreparedStatement senten = null;
        String nombre = txtNombre.getText();
        //Sexo se elige arriba
        String Instagram = txtInstagram.getText();
        String NicknameRegistro=txtNickname.getText();;

        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            String url = "jdbc:sqlserver://localhost:1433;databaseName=Base_Proyecto_Poo4;TrustServerCertificate=True;";
            conexion = DriverManager.getConnection(url, "sa", "12345678");
            // Paso 4: Ejecutar una consulta:
            String consulta = "insert into Jugador values (?,?,?,?)";

            senten = conexion.prepareStatement(consulta);
            senten.setString(1, nombre);
            senten.setString(2, Sexo);
            senten.setString(3, Instagram);
            senten.setString(4, NicknameRegistro);
            int resultado = senten.executeUpdate();
            if (resultado == 0) {
                System.out.println("No se pudo intertar el registro.");
                JOptionPane.showMessageDialog(null, "No se pudo intertar el registro.");
                }
                else {
                    System.out.println("Registro insertado exitosamente.");
                    JOptionPane.showMessageDialog(null, "Registro insertado exitosamente.");
                    }

                } catch (ClassNotFoundException ex) {
                    System.out.println("Error: no se encuentra el archivo de la");
                    System.out.println("clase para la conexión con la base de datos.");
                    ex.printStackTrace();
                } catch (SQLException ex) {
                    System.out.println("Error de conexión a la base de datos.");
                    ex.printStackTrace();
                } finally {
                    try {
                        senten.close();
                        conexion.close();
                    }
                    catch (SQLException ex) {
                        System.out.println("Error en cierre de conexión.");
                    }

                }
    }
    private void conexionVerificacionNickname(){
        // Establecer conexión con la base de datos para verificar nickname registrado
                String url = "jdbc:sqlserver://localhost:1433;databaseName=Base_Proyecto_Poo4;TrustServerCertificate=True;";
                String username = "sa";
                String password = "12345678";
                String Nickname = txtNombre1.getText();;
                try (Connection connection = DriverManager.getConnection(url, username, password)) {
                    // Crear consulta SQL
                    String sql = "SELECT COUNT(*) FROM Jugador WHERE nickname = ?";

                    // Preparar la declaración
                    try (PreparedStatement statement = connection.prepareStatement(sql)) {
                        // Establecer el valor del parámetro
                        statement.setString(1, Nickname);

                        // Ejecutar la consulta de verificacion
                        try (ResultSet resultSet = statement.executeQuery()) {
                            if (resultSet.next()) {
                                int count = resultSet.getInt(1);

                                if (count > 0) {
                                    // Ya existe un usuario con el mismo Nickname
                                    conexionEncontrarIDdeNickname();
                                    EleccionFichero2 b3 = new EleccionFichero2();
                                    showPanel(b3.getFondo4());
                                } else {
                                    //No existe el nickname en la base de datos
                                    JOptionPane.showMessageDialog(null, "Nickname inexistente, por favor escriba correctamente el nickname o registrate");
                                }
                            }
                        }
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
    }
    private void conexionEncontrarIDdeNickname(){
        //Conexion a la base de datos para registrar
        Connection conexion = null;
        PreparedStatement senten = null;
        String Nickname=txtNombre1.getText();

        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            String url = "jdbc:sqlserver://localhost:1433;databaseName=Base_Proyecto_Poo4;TrustServerCertificate=True;";
            conexion = DriverManager.getConnection(url, "sa", "12345678");
            // Paso 4: Ejecutar una consulta:
            String consulta = "SELECT id_jugador FROM Jugador WHERE nickname = ?";

            senten = conexion.prepareStatement(consulta);
            senten.setString(1, Nickname);
            
            try (ResultSet resultSet = senten.executeQuery()) {
                if (resultSet.next()) {
                    int idJugador = resultSet.getInt("id_jugador");
                    BancoDeVariables.setIdJugador2(idJugador);
                    System.out.println("El ID del jugador con ese nickname es: " + idJugador);
                } else {
                    System.out.println("No se encontró ningún jugador con el nickname 'Ghost'.");
                }
            }
                } catch (ClassNotFoundException ex) {
                    System.out.println("Error: no se encuentra el archivo de la");
                    System.out.println("clase para la conexión con la base de datos.");
                    ex.printStackTrace();
                } catch (SQLException ex) {
                    System.out.println("Error de conexión a la base de datos.");
                    ex.printStackTrace();
                } finally {
                    try {
                        senten.close();
                        conexion.close();
                    }
                    catch (SQLException ex) {
                        System.out.println("Error en cierre de conexión.");
                    }

                }
    }
    private void showPanel(JPanel p){
        p.setSize(1150, 694);
        p.setLocation(0, 0);
        panelSesion2.removeAll();
        panelSesion2.add(p, new org.netbeans.lib.awtextra.AbsoluteConstraints(0,0,-1,-1));
        panelSesion2.revalidate();
        panelSesion2.repaint();
    }
 public JPanel getFondo() {
        return panelSesion2;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciarSesion;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panelSesion2;
    private javax.swing.JRadioButton rbtFemenino;
    private javax.swing.JRadioButton rbtMasculino;
    private javax.swing.JTextField txtInstagram;
    private javax.swing.JTextField txtNickname;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombre1;
    // End of variables declaration//GEN-END:variables
}
